{"version":3,"sources":["components/Summary/Summary.js","components/VietnamStats/VietnamStats.js","components/QuickFacts/QuickFacts.js","components/VietnamQuickFacts/VietnamQuickFacts.js","components/VietnamProvinceStats/VietNamProvinceStats.js","containers/DashBoard/Dashboard.js","components/WorldMap/MapChart.js","components/WorldMap/index.js","containers/Map/Map.js","containers/About/About.js","containers/Header/Header.js","App.js","index.js"],"names":["Summary","props","_renderSummaryList","Countries","state","data","isLoaded","map","item","totalClosedCases","TotalDeaths","TotalRecovered","percentageRecovered","percentageDeaths","newPercentageRecovered","newPercentageDeaths","parseFloat","toFixed","NewConfirmed","NewDeaths","country","Country","newConfirmed","newDeaths","newRecovered","NewRecovered","totalConfirmed","TotalConfirmed","totalDeaths","totalRecovered","date","Date","_getArrCountry","text","value","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","style","padding","ref","node","searchInput","placeholder","onChange","e","target","onPressEnter","handleSearch","width","marginBottom","display","type","onClick","icon","SearchOutlined","size","handleReset","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","render","searchedColumn","highlightStyle","backgroundColor","searchWords","searchText","autoEscape","textToHighlight","setState","axios","get","then","response","error","console","log","dataSource","this","columns","title","key","defaultSortOrder","sorter","a","b","className","scroll","y","x","React","Component","VietnamStats","_renderVietNamStatsList","reverse","total","Confirmed","active","Active","recovered","Recovered","deaths","Deaths","today","getFullYear","getMonth","getDate","res","err","QuickFasts","Global","md","valueStyle","fontSize","fontWeight","margin","spinning","bordered","headStyle","textAlign","marginRight","marginLeft","mainContent","VietnamQuickFacts","treated","deceased","VietnamProvinceStats","regionData","totalInfected","activeCases","DashBoard","QuickFacts","MapChart","_getStatusByName","name","i","length","Slug","setTooltipContent","data-tip","projectionConfig","scale","geography","geographies","geo","rsmKey","onMouseEnter","NAME","properties","STATUS","onMouseLeave","default","fill","outline","hover","pressed","Map","useState","content","setContent","About","Header","to","exact","path","App","Fragment","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2bef00eb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Input, Button, Space } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport \"./Summary.css\";\r\n\r\nclass Summary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://api.covid19api.com/summary\").then(\r\n      (response) => {\r\n        this.setState({\r\n          data: response.data,\r\n          isLoaded: true,\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  _renderSummaryList = () => {\r\n    const { Countries } = this.state.data;\r\n\r\n    if (this.state.isLoaded) {\r\n      return Countries.map((item) => {\r\n        const totalClosedCases = item.TotalDeaths + item.TotalRecovered;\r\n        let percentageRecovered = 0;\r\n        let percentageDeaths = 0;\r\n        let newPercentageRecovered = 0;\r\n        let newPercentageDeaths = 0;\r\n        if (totalClosedCases !== 0) {\r\n          percentageRecovered = parseFloat(\r\n            (item.TotalRecovered / totalClosedCases) * 100\r\n          ).toFixed(2);\r\n          percentageDeaths = parseFloat(\r\n            (item.TotalDeaths / totalClosedCases) * 100\r\n          ).toFixed(2);\r\n          newPercentageRecovered = parseFloat(\r\n            (item.NewConfirmed / totalClosedCases) * 100\r\n          ).toFixed(2);\r\n          newPercentageDeaths = parseFloat(\r\n            (item.NewDeaths / totalClosedCases) * 100\r\n          ).toFixed(2);\r\n        }\r\n        return {\r\n          country: item.Country,\r\n          newConfirmed: item.NewConfirmed,\r\n          newDeaths: item.NewDeaths,\r\n          newRecovered: item.NewRecovered,\r\n          totalConfirmed: item.TotalConfirmed,\r\n          totalDeaths: item.TotalDeaths,\r\n          totalRecovered: item.TotalRecovered,\r\n          percentageRecovered:\r\n            percentageRecovered + `% (↑${newPercentageRecovered}%)`,\r\n          percentageDeaths: percentageDeaths + `% (↑${newPercentageDeaths}%)`,\r\n          date: item.Date,\r\n        };\r\n      });\r\n    }\r\n  };\r\n  _getArrCountry = () => {\r\n    const { Countries } = this.state.data;\r\n    if (this.state.isLoaded) {\r\n      return Countries.map((item) => {\r\n        return {\r\n          text: item.Country,\r\n          value: item.Country,\r\n        };\r\n      });\r\n    }\r\n  };\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n  render() {\r\n    const dataSource = this._renderSummaryList();\r\n    const columns = [\r\n      {\r\n        title: \"Tên quốc gia\",\r\n        dataIndex: \"country\",\r\n        key: \"country\",\r\n\r\n        ...this.getColumnSearchProps(\"country\"),\r\n      },\r\n      {\r\n        title: \"Số ca nhiễm mới\",\r\n        dataIndex: \"newConfirmed\",\r\n        key: \"newConfirmed\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.newConfirmed - b.newConfirmed,\r\n      },\r\n      {\r\n        title: \"Số ca tử vong mới\",\r\n        dataIndex: \"newDeaths\",\r\n        key: \"newDeaths\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.newDeaths - b.newDeaths,\r\n      },\r\n      {\r\n        title: \"Số ca hồi phục mới\",\r\n        dataIndex: \"newRecovered\",\r\n        key: \"newRecovered\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.newRecovered - b.newRecovered,\r\n      },\r\n      {\r\n        title: \"Tổng ca nhiễm\",\r\n        dataIndex: \"totalConfirmed\",\r\n        key: \"totalConfirmed\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.totalConfirmed - b.totalConfirmed,\r\n      },\r\n      {\r\n        title: \"Tổng ca tử vong\",\r\n        dataIndex: \"totalDeaths\",\r\n        key: \"totalDeaths\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.totalDeaths - b.totalDeaths,\r\n      },\r\n      {\r\n        title: \"Tổng ca hồi phục\",\r\n        dataIndex: \"totalRecovered\",\r\n        key: \"totalRecovered\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.totalRecovered - b.totalRecovered,\r\n      },\r\n      {\r\n        title: \"Tỷ lệ hồi phục\",\r\n        dataIndex: \"percentageRecovered\",\r\n        key: \"percentageRecovered\",\r\n      },\r\n      {\r\n        title: \"Tỷ lệ tử vong\",\r\n        dataIndex: \"percentageRecovered\",\r\n        key: \"percentageRecovered\",\r\n      },\r\n      {\r\n        title: \"Thời điểm\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"table-container\">\r\n        <span className=\"table-discription\">Thống kê thế giới</span>\r\n        <Table\r\n          scroll={{ y: 464, x: 500 }}\r\n          columns={columns}\r\n          dataSource={dataSource}\r\n        />\r\n        ;\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Summary;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table } from \"antd\";\r\nimport \"./VietnamStats.css\";\r\n\r\nclass VietnamStats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoaded: false,\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    var today = new Date(),\r\n      date =\r\n        today.getFullYear() +\r\n        \"-\" +\r\n        (today.getMonth() + 1) +\r\n        \"-\" +\r\n        today.getDate();\r\n    axios\r\n      .get(\r\n        \"https://api.covid19api.com/country/vietnam?from=2020-03-01T00:00:00Z&to=\" +\r\n          date +\r\n          \"T00:00:00Z\"\r\n      )\r\n      .then(\r\n        (res) => {\r\n          this.setState({\r\n            data: res.data,\r\n            isLoaded: true,\r\n          });\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  _renderVietNamStatsList = () => {\r\n    const data = this.state.data;\r\n    if (this.state.isLoaded) {\r\n      return data.reverse().map((item) => {\r\n        return {\r\n          country: item.Country,\r\n          total: item.Confirmed,\r\n          active: item.Active,\r\n          recovered: item.Recovered,\r\n          deaths: item.Deaths,\r\n          date: item.Date,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const dataSource = this._renderVietNamStatsList();\r\n    const columns = [\r\n      {\r\n        title: \"Tổng số ca\",\r\n        dataIndex: \"total\",\r\n        key: \"total\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.total - b.total,\r\n      },\r\n      {\r\n        title: \"Đang điều trị\",\r\n        dataIndex: \"active\",\r\n        key: \"active\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.active - b.active,\r\n      },\r\n      {\r\n        title: \"Hồi phục\",\r\n        dataIndex: \"recovered\",\r\n        key: \"recovered\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.recovered - b.recovered,\r\n      },\r\n      {\r\n        title: \"Tử vong\",\r\n        dataIndex: \"deaths\",\r\n        key: \"deaths\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.deaths - b.deaths,\r\n      },\r\n      {\r\n        title: \"Thời điểm\",\r\n        dataIndex: \"date\",\r\n        key: \"date\",\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"table-container\">\r\n        <span className=\"table-discription\">Thống kê Việt Nam</span>\r\n        <Table dataSource={dataSource} columns={columns} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VietnamStats;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Spin, Card, Col, Row, Statistic } from \"antd\";\r\nimport \"./QuickFasts.css\";\r\n\r\nclass QuickFasts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoaded: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios.get(\"https://api.covid19api.com/summary\").then(\r\n      (response) => {\r\n        this.setState({\r\n          data: response.data.Global,\r\n          isLoaded: true,\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  mainContent() {\r\n    const { isLoaded } = this.state;\r\n    const { TotalConfirmed, TotalDeaths, TotalRecovered } = this.state.data;\r\n    if (isLoaded) {\r\n      return (\r\n        <Row>\r\n          <Col md={8}>\r\n            <Statistic\r\n              title=\"TỔNG CA NHIỄM\"\r\n              value={TotalConfirmed}\r\n              valueStyle={{\r\n                color: \"#77778B\",\r\n                fontSize: 30,\r\n                fontWeight: \"bold\",\r\n                margin: 10,\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col md={8}>\r\n            <Statistic\r\n              title=\"TỬ VONG\"\r\n              value={TotalDeaths}\r\n              valueStyle={{\r\n                color: \"#F63A4B\",\r\n                fontSize: 30,\r\n                fontWeight: \"bold\",\r\n                margin: 10,\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col md={8}>\r\n            <Statistic\r\n              title=\"HỒI PHỤC\"\r\n              value={TotalRecovered}\r\n              valueStyle={{\r\n                color: \"#699a21\",\r\n                fontSize: 30,\r\n                fontWeight: \"bold\",\r\n                margin: 10,\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      );\r\n    } else {\r\n      return <Spin spinning={isLoaded.toString()} />;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"card-container\">\r\n        <Card\r\n          bordered={false}\r\n          title=\"Global\"\r\n          headStyle={{\r\n            backgroundColor: \"#F5F5F5\",\r\n            color: \"#1890ff\",\r\n            textAlign: \"center\",\r\n            fontSize: 20,\r\n            fontWeight: \"bolder\",\r\n            marginRight: 100,\r\n            marginLeft: 100,\r\n          }}\r\n        >\r\n          <Card\r\n            bordered={true}\r\n            className=\"grid-content\"\r\n            style={{\r\n              textAlign: \"center\",\r\n              marginRight: 100,\r\n              marginLeft: 100,\r\n            }}\r\n          >\r\n            {this.mainContent()}\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default QuickFasts;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Statistic, Spin, Row, Col, Card } from \"antd\";\r\nclass VietnamQuickFacts extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoaded: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://api.apify.com/v2/key-value-stores/EaCBL1JNntjR3EakU/records/LATEST?disableRedirect=true\"\r\n      )\r\n      .then(\r\n        (response) => {\r\n          this.setState({\r\n            data: response.data,\r\n            isLoaded: true,\r\n          });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  }\r\n  mainContent() {\r\n    const { isLoaded } = this.state;\r\n    const { treated, recovered, deceased } = this.state.data;\r\n    const total = treated + recovered + deceased;\r\n    if (isLoaded) {\r\n      return (\r\n        <Row>\r\n          <Col md={8}>\r\n            <Statistic\r\n              title=\"TỔNG CA\"\r\n              value={total}\r\n              valueStyle={{\r\n                color: \"#77778B\",\r\n                fontSize: 30,\r\n                fontWeight: \"bold\",\r\n                margin: 10,\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col md={8}>\r\n            <Statistic\r\n              title=\"TỬ VONG\"\r\n              value={deceased}\r\n              valueStyle={{\r\n                color: \"#F63A4B\",\r\n                fontSize: 30,\r\n                fontWeight: \"bold\",\r\n                margin: 10,\r\n              }}\r\n            />\r\n          </Col>\r\n          <Col md={8}>\r\n            <Statistic\r\n              title=\"HỒI PHỤC\"\r\n              value={recovered}\r\n              valueStyle={{\r\n                color: \"#699a21\",\r\n                fontSize: 30,\r\n                fontWeight: \"bold\",\r\n                margin: 10,\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      );\r\n    } else {\r\n      return <Spin spinning={isLoaded.toString()} />;\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"card-container\">\r\n        <Card\r\n          bordered={false}\r\n          title=\"Việt Nam\"\r\n          headStyle={{\r\n            backgroundColor: \"#F5F5F5\",\r\n            color: \"#1890ff\",\r\n            textAlign: \"center\",\r\n            fontSize: 20,\r\n            fontWeight: \"bolder\",\r\n            marginRight: 100,\r\n            marginLeft: 100,\r\n          }}\r\n        >\r\n          <Card\r\n            bordered={true}\r\n            className=\"grid-content\"\r\n            style={{\r\n              textAlign: \"center\",\r\n              marginRight: 100,\r\n              marginLeft: 100,\r\n            }}\r\n          >\r\n            {this.mainContent()}\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default VietnamQuickFacts;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Table, Input, Button, Space } from \"antd\";\r\nimport { SearchOutlined } from \"@ant-design/icons\";\r\nimport Highlighter from \"react-highlight-words\";\r\nimport \"./VietnamProvinceStats.css\";\r\n\r\nclass VietnamProvinceStats extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        \"https://api.apify.com/v2/key-value-stores/EaCBL1JNntjR3EakU/records/LATEST?disableRedirect=true\"\r\n      )\r\n      .then(\r\n        (res) => {\r\n          this.setState({\r\n            data: res.data.regionData,\r\n          });\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n  getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({\r\n      setSelectedKeys,\r\n      selectedKeys,\r\n      confirm,\r\n      clearFilters,\r\n    }) => (\r\n      <div style={{ padding: 8 }}>\r\n        <Input\r\n          ref={(node) => {\r\n            this.searchInput = node;\r\n          }}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) =>\r\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n          }\r\n          onPressEnter={() =>\r\n            this.handleSearch(selectedKeys, confirm, dataIndex)\r\n          }\r\n          style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => this.handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{ width: 90 }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex]\r\n        ? record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase())\r\n        : \"\",\r\n    onFilterDropdownVisibleChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => this.searchInput.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      this.state.searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n          searchWords={[this.state.searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : \"\"}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: \"Tỉnh\",\r\n        dataIndex: \"region\",\r\n        key: \"region\",\r\n        ...this.getColumnSearchProps(\"region\"),\r\n      },\r\n      {\r\n        title: \"Tổng ca\",\r\n        dataIndex: \"totalInfected\",\r\n        key: \"totalInfected\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.totalInfected - b.totalInfected,\r\n      },\r\n      {\r\n        title: \"Đang điều trị\",\r\n        dataIndex: \"activeCases\",\r\n        key: \"activeCases\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.activeCases - b.activeCases,\r\n      },\r\n      {\r\n        title: \"Số ca hồi phục\",\r\n        dataIndex: \"recovered\",\r\n        key: \"recovered\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.recovered - b.recovered,\r\n      },\r\n      {\r\n        title: \"Số ca tử vong\",\r\n        dataIndex: \"deceased\",\r\n        key: \"deceased\",\r\n        defaultSortOrder: \"descend\",\r\n        sorter: (a, b) => a.deceased - b.deceased,\r\n      },\r\n    ];\r\n    return (\r\n      <div className=\"table-container\">\r\n        <span className=\"table-discription\">Thống kê theo tỉnh</span>\r\n        <Table dataSource={this.state.data} columns={columns} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VietnamProvinceStats;\r\n","import React from \"react\";\r\nimport Summary from \"../../components/Summary/Summary\";\r\nimport VietnamStats from \"../../components/VietnamStats/VietnamStats\";\r\nimport QuickFacts from \"../../components/QuickFacts/QuickFacts\";\r\nimport VietnamQuickFacts from \"../../components/VietnamQuickFacts/VietnamQuickFacts\";\r\nimport VietnamProvinceStats from \"../../components/VietnamProvinceStats/VietNamProvinceStats\";\r\n\r\nimport { Row, Col } from \"antd\";\r\nclass DashBoard extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Row>\r\n          <Col md={24}>\r\n            <QuickFacts />\r\n          </Col>\r\n          <Col md={24}>\r\n            <VietnamQuickFacts />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={24}>\r\n            <Summary />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            <VietnamStats />\r\n          </Col>\r\n          <Col md={12}>\r\n            <VietnamProvinceStats />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DashBoard;\r\n","import React from \"react\";\r\nimport { ComposableMap, Geographies, Geography } from \"react-simple-maps\";\r\n\r\nimport axios from \"axios\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\nclass MapChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isLoaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    axios.get(\"https://api.covid19api.com/summary\").then(\r\n      (response) => {\r\n        this.setState({\r\n          data: response.data,\r\n          isLoaded: true,\r\n        });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  _getStatusByName = (name) => {\r\n    const { Countries } = this.state.data;\r\n    if (this.state.isLoaded) {\r\n      for (let i = 0; i < Countries.length; i++) {\r\n        if (\r\n          Countries[i].Slug.toLowerCase() === name.toLowerCase() ||\r\n          Countries[i].Country.toLowerCase() === name.toLowerCase()\r\n        ) {\r\n          return Countries[i];\r\n        }\r\n      }\r\n\r\n      return null;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { setTooltipContent } = this.props;\r\n    return (\r\n      <>\r\n        <ComposableMap data-tip=\"\" projectionConfig={{ scale: 150 }}>\r\n          <Geographies geography={geoUrl}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  onMouseEnter={() => {\r\n                    const { NAME } = geo.properties;\r\n                    const STATUS = this._getStatusByName(NAME);\r\n                    if (STATUS !== null) {\r\n                      setTooltipContent(\r\n                        <p>\r\n                          Tên quốc gia - <b>{STATUS.Country}</b>\r\n                          <br />\r\n                          Tổng ca nhiễm - <b>{STATUS.TotalConfirmed}</b>\r\n                          <br />\r\n                          Hồi phục - <b>{STATUS.TotalRecovered}</b>\r\n                          <br />\r\n                          Tử vong - <b>{STATUS.TotalDeaths}</b>\r\n                        </p>\r\n                      );\r\n                    } else {\r\n                      setTooltipContent(`${NAME} - Chưa có dữ liệu`);\r\n                    }\r\n                  }}\r\n                  onMouseLeave={() => {\r\n                    setTooltipContent(\"\");\r\n                  }}\r\n                  style={{\r\n                    default: {\r\n                      fill: \"#D6D6DA\",\r\n                      outline: \"none\",\r\n                    },\r\n                    hover: {\r\n                      fill: \"#F53\",\r\n                      outline: \"none\",\r\n                    },\r\n                    pressed: {\r\n                      fill: \"#E42\",\r\n                      outline: \"none\",\r\n                    },\r\n                  }}\r\n                />\r\n              ))\r\n            }\r\n          </Geographies>\r\n        </ComposableMap>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapChart;\r\n","import React, { useState } from \"react\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport MapChart from \"./MapChart\";\r\nimport \"./style.css\";\r\nexport default function Map() {\r\n  const [content, setContent] = useState(\"\");\r\n  return (\r\n    <div style={{ backgroundColor: \"#282a36\" }}>\r\n      <MapChart setTooltipContent={setContent} />\r\n      <ReactTooltip className=\"tooltip-content\">{content}</ReactTooltip>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport WorldMap from \"../../components/WorldMap/index\";\r\nclass Map extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <WorldMap />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Map;\r\n","import React from \"react\";\r\n\r\nexport default class About extends React.Component {\r\n  render() {\r\n    return (\r\n      <h2>This app was made by 3 member of UIT: Phat Tran, Minh Tran, Huu Y</h2>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport DashBoard from \"../DashBoard/Dashboard\";\r\nimport Map from \"../Map/Map\";\r\nimport About from \"../About/About\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"header\">\r\n          <nav className=\"header__nav\">\r\n            <ul>\r\n              <li>\r\n                <Link to=\"/\">Dashboard</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/map\">Map</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/about\">About</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n          <Switch>\r\n            <Route exact path=\"/about\">\r\n              <About />\r\n            </Route>\r\n            <Route exact path=\"/map\">\r\n              <Map />\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <DashBoard />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./containers/Header/Header\";\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Header />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}